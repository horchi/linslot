
###################
  Voraussetzungen
###################

- Arduino (z.B. Diecimila)
- qt4, qt4-dev (bei gängigen Distributionen als Paket verfügbar)
- libsqlite3, libsqlite3-dev (bei gängigen Distributionen als Paket verfügbar)

Arduino
-------

- avr-libc, avrdude, gcc-avr, binutils-avr (bei gängigen Distributionen als Paket verfügbar)
- die Entwicklungsumgebung von hier http://www.arduino.cc/en/Main/Software
  davon wird nicht unbedingt die IDE sondern die Zusatz-Libraries benötigt


###############
     Build
###############

auspacken
> tar xvjf linslot-x.x.x.tar.bz2
> cd linslot

> qmake
  je nach QT-Installation qmake-qt4 (wichtig ist das qmake von qt4.x verwendet wird)
> make

Arduino Build/Upload
--------------------

Der Build Prozess ist nur nötig wenn man am Code des ATmega Programmteils etwas verändert hat,
ansonsten kann man glich zum nächten Schritt (upload) übergehen da das HEX File
im Tarball enthalten ist.

> cd linslot/avr
> make clean
> make -s

Arduino an USB anschließen, den USB Port im Makefile einstellen (Zeile: PORT = /dev/ttyUSB0)
Nun noch der Upload

> make upload

Hinweius:
Sollte der upload nicht starten hilft bei mir das gleichzeitige 'kurze' betätigen
der Reset-Taste auf dem Arduino (gleichzeitig mit dem starten von 'make upload')


################
  Installation
################

System:
-------
Das Kernel Modul für den Arduino solle nach der Installation automatisch geladen werden.
Modul 'ftdi_sio'


Programm
--------

> cd linslot
> su root
> mkdir -p /usr/local/share/linslot/
> cp -a pixmap sound /usr/local/share/linslot/
> chmod -R a+rX /usr/local/share/linslot/
> cp linslot /usr/local/bin
> chmod 755 /usr/local/bin/linslot


###############
    Start
###############

#> linslot

oder ohne Anschluss des Ardunio im Test-Modus:

#> linslot -t


###############
    TODOS
###############

- Installationsskript
- Programm auf 4-Spuren erweitern
