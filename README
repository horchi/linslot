
###################
  Voraussetzungen
###################

- Arduino (z.B. Diecimila)
- qt4, qt4-dev
- libsqlite3, libsqlite3-dev

Installation der benötigten Packete (am Beipiel ubbuntu):
---------------------------------------------------------

sudo apt install gcc g++ make git sqlite3 libsqlite3-dev libasound2-dev alsa-oss
sudo apt qt4-qmake libqt4-dev qt4-dev-tools

Für den Arduino Code
---------------------

- avr-libc, avrdude, gcc-avr, binutils-avr (bei gängigen Distributionen als Paket verfügbar)
- die Entwicklungsumgebung von hier http://www.arduino.cc/en/Main/Software
  davon wird nicht unbedingt die IDE sondern die Zusatz-Libraries benötigt


####################
  Build / Install
####################

Quellcode holen (muss nur einmal gemacht werden):

#> cd
#> git clone https://github.com/horchi/linslot.git

Ansonsten - wenn es eine neue Version gibt) aktualisierern:

#> cd ~/linslot
#> git

build / install

#> cd ~/linslot
#> ./build.sh


Arduino Build/Upload
--------------------

Der Build Prozess ist nur nötig wenn man am Code des ATmega Programmteils etwas verändert hat,
ansonsten kann man gleich zum nächten Schritt (upload) übergehen da das HEX File
im Tarball enthalten ist.

> cd ./avr
> make clean
> make -s

Arduino an USB anschließen, den USB Port im Makefile einstellen (Zeile: PORT = /dev/ttyUSB0)
Nun noch der Upload

> make upload

Hinweius:
Sollte der upload nicht starten hilft bei mir das gleichzeitige 'kurze' betätigen
der Reset-Taste auf dem Arduino (gleichzeitig mit dem starten von 'make upload')


###############
    Start
###############

#> linslot

oder ohne Anschluss des Ardunio im Test-Modus:

#> linslot -t


###############
    TODOS
###############

- Installationsskript
- Programm auf 4-Spuren erweitern
